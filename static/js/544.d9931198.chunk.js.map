{"version":3,"file":"static/js/544.d9931198.chunk.js","mappings":"kPAqDA,UA/Ca,SAAAA,GACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MAkBjB,OAjBAC,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,YACR,iBAAC,oGAEGP,GAAW,GAFd,UAGwBQ,EAAAA,EAAAA,MAHxB,OAGSC,EAHT,OAIGX,EAAUW,GAJb,gDAMGP,GAAS,GACTG,QAAQJ,MAAR,MAPH,yBASGD,GAAW,GATd,2EAAD,EAYD,GAAE,KAGD,4BACE,+CACCD,IAAW,SAAC,IAAD,IACXF,EAAOa,OAAS,IACf,wBACGb,EAAOc,KAAI,SAAAC,GAAK,OACf,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMb,GAAhD,UACGS,EAAMK,OAASL,EAAMM,KAAM,QAFvBN,EAAME,GADA,MASpBb,IACC,wFAIP,C,4MC/CDkB,IAAAA,SAAAA,QAAyB,gCACzBA,IAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGX,IAAMC,EAAiC,QACjCC,EAAiC,OAEhC,SAAed,EAAtB,+CAAO,OAAP,oBAAO,WAAgCe,GAAhC,yFACkBJ,IAAAA,IAAA,mBACTE,EADS,YACUC,GAC/B,CACEE,OAAQ,CACNC,KAAMF,KALP,uBACGG,EADH,EACGA,KADH,kBAUEA,EAAKC,SAVP,kEAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBV,IAAAA,IAAA,gBAA2B,CAChDK,OAAQ,CACNM,MAAOD,KAHN,uBACGH,EADH,EACGA,KADH,kBAOEA,EAAKC,SAPP,kEAUA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,yFACkBb,IAAAA,IAAA,iBAAoBa,GAAW,CACpDR,OAAQ,CACNS,SAAUD,KAHT,uBACGN,EADH,EACGA,KADH,kBAOEA,GAPF,kEAUA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAmCF,GAAnC,yFACkBb,IAAAA,IAAA,iBAAoBa,EAApB,YAAuC,CAC5DR,OAAQ,CACNS,SAAUD,KAHT,uBACGN,EADH,EACGA,KADH,kBAOEA,EAAKS,MAPP,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BJ,GAA/B,yFACkBb,IAAAA,IAAA,iBAAoBa,EAApB,YAAuC,CAC5DR,OAAQ,CACNS,SAAUD,KAHT,uBACGN,EADH,EACGA,KADH,kBAOEA,EAAKC,SAPP,kE","sources":["pages/Home/Home.jsx","services/ApiRequests.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { getTrendingMedia } from 'services/ApiRequests';\nimport { Link, useLocation } from 'react-router-dom';\nimport Spiner from 'components/Spiner/Spiner';\n\nconst Home = props => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const location = useLocation();\n  console.log(location);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setLoading(true);\n        const result = await getTrendingMedia();\n        setMovies(result);\n      } catch (error) {\n        setError(true);\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending this week</h1>\n      {loading && <Spiner />}\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title || movie.name}{' '}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n      {error && (\n        <p>Something went wrong, please reload the page and try again</p>\n      )}\n    </div>\n  );\n};\n\n// Home.propTypes = {};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'f52fb5605503f66e762d80f647488744',\n};\n\nconst mediaType = { all: 'all', movie: 'movie', tv: 'tv', person: 'person' };\nconst timeWindow = { day: 'day', week: 'week' };\n\nexport async function getTrendingMedia(pageNamber) {\n  const { data } = await axios.get(\n    `trending/${mediaType.movie}/${timeWindow.week}`,\n    {\n      params: {\n        page: pageNamber,\n      },\n    }\n  );\n\n  return data.results;\n}\n\nexport async function getSearchMovies(searchParam) {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      query: searchParam,\n    },\n  });\n  // console.log(data);\n  return data.results;\n}\n\nexport async function getAllInfoMovies(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}`, {\n    params: {\n      movie_id: movieId,\n    },\n  });\n  // console.log(data);\n  return data;\n}\n\nexport async function getMoviesActorsCast(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      movie_id: movieId,\n    },\n  });\n  // console.log(data.cast);\n  return data.cast;\n}\n\nexport async function getMoviesReview(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      movie_id: movieId,\n    },\n  });\n  // console.log(data.results);\n  return data.results;\n}\n\nexport const useApi = () => {\n  return {\n    getTrendingMedia,\n    getSearchMovies,\n    getAllInfoMovies,\n    getMoviesActorsCast,\n    getMoviesReview,\n  };\n};\n"],"names":["props","useState","movies","setMovies","loading","setLoading","error","setError","location","useLocation","console","log","useEffect","getTrendingMedia","result","length","map","movie","to","id","state","from","title","name","axios","api_key","mediaType","timeWindow","pageNamber","params","page","data","results","getSearchMovies","searchParam","query","getAllInfoMovies","movieId","movie_id","getMoviesActorsCast","cast","getMoviesReview"],"sourceRoot":""}
{"version":3,"file":"static/js/961.b40f7de0.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.jsx","services/ApiRequests.js"],"sourcesContent":["import { useState, useEffect, Suspense } from 'react';\nimport { IoArrowBackSharp } from 'react-icons/io5';\nimport Spiner from 'components/Spiner/Spiner';\n\n// import PropTypes from 'prop-types';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { getAllInfoMovies } from 'services/ApiRequests';\n\nconst MovieDetails = props => {\n  const [selectMovie, setSelectMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  console.log(location);\n\n  useEffect(() => {\n    if (movieId) {\n      (async () => {\n        setLoading(true);\n        try {\n          const result = await getAllInfoMovies(movieId);\n          setSelectMovie(result);\n        } catch (error) {\n          setError(true);\n          console.error(error);\n        } finally {\n          setLoading(false);\n        }\n      })();\n    }\n  }, [movieId]);\n\n  if (!selectMovie) {\n    return null;\n  }\n\n  const {\n    title,\n    name,\n    overview,\n    vote_average,\n    release_date,\n    popularity,\n    poster_path,\n    first_air_date,\n    genres,\n  } = selectMovie;\n\n  let imageUrl = 'https://image.tmdb.org/t/p/w200/' + poster_path;\n  if (!poster_path) {\n    imageUrl = 'https://www.drupal.org/files/project-images/broken-image.jpg';\n  }\n\n  return (\n    <div>\n      {loading && <Spiner />}\n      {error && (\n        <p>Something went wrong, please reload the page and try again</p>\n      )}\n      <Link to={location.state?.from ?? `/movies`}>\n        <button\n          type=\"button\"\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginTop: '20px',\n            backgroundColor: 'rosybrown',\n          }}\n        >\n          <IoArrowBackSharp /> Go back\n        </button>\n      </Link>\n      {selectMovie && (\n        <div>\n          <h2>{title || name}</h2>\n          <img src={imageUrl} alt={`${title || name} movie poster `} />\n          <p>Overview : {overview} </p>\n          <p>vote average {vote_average}</p>\n          <p>{release_date || first_air_date}</p>\n          <p>{Math.floor(popularity)}</p>\n          <p>Genres : {genres.map(genre => genre.name).join(',')}</p>\n          <p>User score:{Math.round((vote_average / 10) * 100)}&#37;</p>\n        </div>\n      )}\n      <div>\n        <h2>Additional Information</h2>\n        <ul>\n          <li>\n            <NavLink to=\"cast\" state={{ from: location.state?.from }}>\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\" state={{ from: location.state?.from }}>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n        <Suspense fallback={<Spiner />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\n// MovieDetails.propTypes = {};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'f52fb5605503f66e762d80f647488744',\n};\n\nconst mediaType = { all: 'all', movie: 'movie', tv: 'tv', person: 'person' };\nconst timeWindow = { day: 'day', week: 'week' };\n\nexport async function getTrendingMedia(pageNamber) {\n  const { data } = await axios.get(\n    `trending/${mediaType.movie}/${timeWindow.week}`,\n    {\n      params: {\n        page: pageNamber,\n      },\n    }\n  );\n\n  return data.results;\n}\n\nexport async function getSearchMovies(searchParam) {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      query: searchParam,\n    },\n  });\n  // console.log(data);\n  return data.results;\n}\n\nexport async function getAllInfoMovies(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}`, {\n    params: {\n      movie_id: movieId,\n    },\n  });\n  // console.log(data);\n  return data;\n}\n\nexport async function getMoviesActorsCast(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      movie_id: movieId,\n    },\n  });\n  // console.log(data.cast);\n  return data.cast;\n}\n\nexport async function getMoviesReview(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      movie_id: movieId,\n    },\n  });\n  // console.log(data.results);\n  return data.results;\n}\n\nexport const useApi = () => {\n  return {\n    getTrendingMedia,\n    getSearchMovies,\n    getAllInfoMovies,\n    getMoviesActorsCast,\n    getMoviesReview,\n  };\n};\n"],"names":["props","useState","selectMovie","setSelectMovie","loading","setLoading","error","setError","movieId","useParams","location","useLocation","console","log","useEffect","getAllInfoMovies","result","title","name","overview","vote_average","release_date","popularity","poster_path","first_air_date","genres","imageUrl","to","state","from","type","style","display","justifyContent","alignItems","marginTop","backgroundColor","src","alt","Math","floor","map","genre","join","round","Suspense","fallback","axios","api_key","mediaType","timeWindow","getTrendingMedia","pageNamber","params","page","data","results","getSearchMovies","searchParam","query","movie_id","getMoviesActorsCast","cast","getMoviesReview"],"sourceRoot":""}
{"version":3,"file":"static/js/650.7257bcb0.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetailsPage.styled.js","pages/MovieDetails/MovieDetailsPage.jsx","services/ApiRequests.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Tittle = styled.h2`\n  padding: 5px 20px;\n  margin-bottom: 10px;\n  cursor: pointer;\n  transition: all 500ms ease-out;\n  &:hover {\n    color: crimson;\n    transform: scale(1.02);\n  }\n`;\nexport const Container = styled.div`\n  margin-bottom: 20px;\n  padding: 5px 20px;\n  border-bottom: 2px solid gray;\n  box-shadow: 2px 2px 2px grey;\n`;\nexport const ContainerMovie = styled.div`\n  display: flex;\n  gap: 40px;\n  padding: 5px 20px;\n  align-items: flex-start;\n  border-bottom: 2px solid gray;\n  box-shadow: 2px 2px 2px grey;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 10px;\n  border-radius: 4px;\n  border: 2px solid crimson;\n  font-size: 26px;\n  font-weight: 700;\n  color: crimson;\n  background-color: black;\n  transition: all 500ms ease-out;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    background-color: brown;\n    transform: scale(1.05);\n    color: white;\n    border-color: black;\n  }\n`;\nexport const ButtonLink = styled(NavLink)`\n  display: block;\n  text-decoration: none;\n  padding: 5px 20px;\n  margin-bottom: 20px;\n`;\nexport const MovieItem = styled.li`\n  margin-bottom: 10px;\n  color: black;\n  font-size: 24px;\n  font-weight: 500;\n`;\nexport const MovieInfo = styled.p`\n  margin-top: 10px;\n  color: #59072b;\n  font-size: 20px;\n  font-weight: 600;\n`;\nexport const Link = styled(NavLink)`\n  display: block;\n  text-decoration: none;\n  padding: 5px 20px;\n  margin-bottom: 20px;\n  font-weight: 700;\n\n  transition: all 200ms ease-out;\n  &.active {\n    color: crimson;\n  }\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: darkcyan;\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { IoArrowBackSharp } from 'react-icons/io5';\nimport Spiner from 'components/Spiner/Spiner';\n\n// import PropTypes from 'prop-types';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getAllInfoMovies } from 'services/ApiRequests';\n\nimport {\n  Container,\n  Button,\n  ButtonLink,\n  Tittle,\n  ContainerMovie,\n  MovieItem,\n  MovieInfo,\n  Link,\n} from './MovieDetailsPage.styled';\n\nconst MovieDetails = () => {\n  const [selectMovie, setSelectMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  console.log(location);\n\n  useEffect(() => {\n    if (movieId) {\n      setLoading(true);\n      (async () => {\n        try {\n          const result = await getAllInfoMovies(movieId);\n          setSelectMovie(result);\n        } catch (error) {\n          setError(true);\n          console.error(error);\n        } finally {\n          setLoading(false);\n        }\n      })();\n    }\n  }, [movieId]);\n\n  if (!selectMovie) {\n    return null;\n  }\n\n  const {\n    title,\n    name,\n    overview,\n    vote_average,\n    release_date,\n    poster_path,\n    first_air_date,\n    genres,\n  } = selectMovie;\n\n  let imageUrl = 'https://image.tmdb.org/t/p/w300/' + poster_path;\n  if (!poster_path) {\n    imageUrl = 'https://www.drupal.org/files/project-images/broken-image.jpg';\n  }\n\n  return (\n    <Container>\n      {loading && <Spiner />}\n      {error && (\n        <p>Something went wrong, please reload the page and try again</p>\n      )}\n      <ButtonLink to={location.state?.from ?? `/movies`}>\n        <Button type=\"button\">\n          <IoArrowBackSharp /> Go back\n        </Button>\n      </ButtonLink>\n      {selectMovie && (\n        <ContainerMovie>\n          <img src={imageUrl} alt={`${title || name} movie poster `} />\n          <ul>\n            <Tittle>{title || name}</Tittle>\n            <MovieItem>\n              User score:\n              <MovieInfo>\n                {Math.round((vote_average / 10) * 100)}&#37;\n              </MovieInfo>\n            </MovieItem>\n            <MovieItem>\n              Overview :<MovieInfo> {overview} </MovieInfo>\n            </MovieItem>\n\n            <MovieItem>\n              Relize date:\n              <MovieInfo> {release_date || first_air_date}</MovieInfo>\n            </MovieItem>\n\n            <MovieItem>\n              Genres :\n              <MovieInfo>\n                {' '}\n                {genres.map(genre => genre.name).join(',')}\n              </MovieInfo>\n            </MovieItem>\n          </ul>\n        </ContainerMovie>\n      )}\n      <Container>\n        <Tittle>Additional Information</Tittle>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: location.state?.from }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: location.state?.from }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Suspense fallback={<Spiner />}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </Container>\n  );\n};\n\n// MovieDetails.propTypes = {};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'f52fb5605503f66e762d80f647488744',\n};\n\nconst mediaType = { all: 'all', movie: 'movie', tv: 'tv', person: 'person' };\nconst timeWindow = { day: 'day', week: 'week' };\n\nexport async function getTrendingMedia(pageNamber) {\n  const { data } = await axios.get(\n    `trending/${mediaType.movie}/${timeWindow.week}`,\n    {\n      params: {\n        page: pageNamber,\n      },\n    }\n  );\n\n  return data.results;\n}\n\nexport async function getSearchMovies(searchParam) {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      query: searchParam,\n    },\n  });\n  // console.log(data);\n  return data.results;\n}\n\nexport async function getAllInfoMovies(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}`, {\n    params: {\n      movie_id: movieId,\n    },\n  });\n  // console.log(data);\n  return data;\n}\n\nexport async function getMoviesActorsCast(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      movie_id: movieId,\n    },\n  });\n  // console.log(data.cast);\n  return data.cast;\n}\n\nexport async function getMoviesReview(movieId) {\n  const { data } = await axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      movie_id: movieId,\n    },\n  });\n  // console.log(data.results);\n  return data.results;\n}\n\nexport const useApi = () => {\n  return {\n    getTrendingMedia,\n    getSearchMovies,\n    getAllInfoMovies,\n    getMoviesActorsCast,\n    getMoviesReview,\n  };\n};\n"],"names":["Tittle","styled","Container","ContainerMovie","Button","ButtonLink","NavLink","MovieItem","MovieInfo","Link","useState","selectMovie","setSelectMovie","loading","setLoading","error","setError","movieId","useParams","location","useLocation","console","log","useEffect","getAllInfoMovies","result","title","name","overview","vote_average","release_date","poster_path","first_air_date","genres","imageUrl","Spiner","to","state","from","type","src","alt","Math","round","map","genre","join","Suspense","fallback","axios","api_key","mediaType","timeWindow","getTrendingMedia","pageNamber","params","page","data","results","getSearchMovies","searchParam","query","movie_id","getMoviesActorsCast","cast","getMoviesReview"],"sourceRoot":""}